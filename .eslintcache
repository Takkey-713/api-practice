[{"/Users/tksk/api-practice/api-practice/src/components/pages/main/addList/AddList.tsx":"1","/Users/tksk/api-practice/api-practice/src/components/pages/main/board/Board.tsx":"2","/Users/tksk/api-practice/api-practice/src/components/pages/main/task/Task.tsx":"3","/Users/tksk/api-practice/api-practice/src/reportWebVitals.ts":"4","/Users/tksk/api-practice/api-practice/src/components/pages/main/Main.tsx":"5","/Users/tksk/api-practice/api-practice/src/components/pages/modal/FormModal.tsx":"6","/Users/tksk/api-practice/api-practice/src/components/pages/modal/TaskBody.tsx":"7","/Users/tksk/api-practice/api-practice/src/index.tsx":"8","/Users/tksk/api-practice/api-practice/src/components/Home.tsx":"9","/Users/tksk/api-practice/api-practice/src/components/pages/header/Header.tsx":"10","/Users/tksk/api-practice/api-practice/src/components/requests/BoardRequest.ts":"11","/Users/tksk/api-practice/api-practice/src/components/auth/AuthForm.tsx":"12","/Users/tksk/api-practice/api-practice/src/components/requests/TaskRequest.ts":"13","/Users/tksk/api-practice/api-practice/src/components/requests/authRequest.ts":"14","/Users/tksk/api-practice/api-practice/src/components/requests/AuthRequest.ts":"15","/Users/tksk/api-practice/api-practice/src/components/hooks/useDataReducer.ts":"16","/Users/tksk/api-practice/api-practice/src/components/pages/modal/BoardModal.tsx":"17","/Users/tksk/api-practice/api-practice/src/components/interfaces/interface.ts":"18","/Users/tksk/api-practice/api-practice/src/App.tsx":"19"},{"size":1927,"mtime":1613835245715,"results":"20","hashOfConfig":"21"},{"size":5219,"mtime":1614823882512,"results":"22","hashOfConfig":"21"},{"size":1026,"mtime":1614761091866,"results":"23","hashOfConfig":"21"},{"size":425,"mtime":1611060678449,"results":"24","hashOfConfig":"21"},{"size":969,"mtime":1613726285741,"results":"25","hashOfConfig":"21"},{"size":1067,"mtime":1614761255317,"results":"26","hashOfConfig":"21"},{"size":4447,"mtime":1614763311570,"results":"27","hashOfConfig":"21"},{"size":292,"mtime":1614763164251,"results":"28","hashOfConfig":"21"},{"size":494,"mtime":1613714096789,"results":"29","hashOfConfig":"21"},{"size":836,"mtime":1614324633973,"results":"30","hashOfConfig":"21"},{"size":1227,"mtime":1613713252173,"results":"31","hashOfConfig":"21"},{"size":5205,"mtime":1614330264433,"results":"32","hashOfConfig":"21"},{"size":1460,"mtime":1614331308477,"results":"33","hashOfConfig":"21"},{"size":1116,"mtime":1613551607607,"results":"34","hashOfConfig":"21"},{"size":1208,"mtime":1613632214405,"results":"35","hashOfConfig":"21"},{"size":988,"mtime":1613711943829,"results":"36","hashOfConfig":"21"},{"size":4069,"mtime":1614780458317,"results":"37","hashOfConfig":"21"},{"size":341,"mtime":1614325377860,"results":"38","hashOfConfig":"21"},{"size":2876,"mtime":1614763441728,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"xb9whp",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tksk/api-practice/api-practice/src/components/pages/main/addList/AddList.tsx",["86"],"import React, { useState, useContext } from \"react\";\nimport { DataContext } from \"../../../../Guard\";\nimport styles from \"./AddList.module.css\";\nimport { BoardRequest } from \"../../../requests/BoardRequest\";\nimport { BoardType } from \"../../../interfaces/interface\";\n\nexport const AddList = () => {\n  const [boardDisplay, setBoardDisplay] = useState(true);\n  const [name, setName] = useState(\"\");\n  const { data, dispatch } = useContext(DataContext);\n\n  const newData: BoardType = {\n    id: 0,\n    name: name,\n  };\n\n  const onClickSubmit = async () => {\n    try {\n      const boards: BoardType[] = await BoardRequest(\"createBoards\", {\n        data: newData,\n      });\n      dispatch({ type: \"boardsUpdate\", payload: { board: boards } });\n      setBoardDisplay(!boardDisplay);\n    } catch (err) {\n      alert(\"通信に失敗しました。\");\n    }\n  };\n\n  return (\n    <>\n      {boardDisplay ? (\n        <div\n          className={styles.add_board}\n          onClick={() => setBoardDisplay(!boardDisplay)}\n        >\n          <div>\n            <span>+</span> <span>リストを追加する</span>\n          </div>\n        </div>\n      ) : (\n        <div className={styles.add_board_form}>\n          <textarea\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n              setName(e.target.value);\n            }}\n            className={styles.board_textarea}\n            placeholder=\"リストのタイトルを入力...\"\n          />\n          <div className={styles.add_submit_form}>\n            <input\n              type=\"submit\"\n              className={styles.add_list_submit}\n              value=\"リストを追加\"\n              onClick={onClickSubmit}\n            />\n            <div\n              className={styles.cancel_icon}\n              onClick={() => setBoardDisplay(!boardDisplay)}\n            >\n              ×\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n",["87","88"],"/Users/tksk/api-practice/api-practice/src/components/pages/main/board/Board.tsx",["89","90"],"/Users/tksk/api-practice/api-practice/src/components/pages/main/task/Task.tsx",[],"/Users/tksk/api-practice/api-practice/src/reportWebVitals.ts",[],"/Users/tksk/api-practice/api-practice/src/components/pages/main/Main.tsx",["91","92","93","94"],"import React, { useState, useContext } from \"react\";\nimport { DataContext } from \"../../../Guard\";\nimport { Board } from \"./board/Board\";\nimport { BoardType, TaskType } from \"../../interfaces/interface\";\nimport styles from \"./Main.module.css\";\nimport { AddList } from \"../main/addList/AddList\";\n\ninterface BoardsType {\n  boards: BoardType[];\n}\n\ninterface TasksType {\n  tasks: TaskType[];\n}\n\nexport const Main = () => {\n  const { data, dispatch } = useContext(DataContext);\n  return (\n    <div className={styles.main}>\n      {data.boards &&\n        data.boards.map((ele) => {\n          const tasks = data.tasks.filter((task) => {\n            return task.board_id === ele.id;\n          });\n          return (\n            <div key={ele.id} className={styles.board_list}>\n              <Board tasks={tasks} board={ele} key={ele.id} />\n            </div>\n          );\n        })}\n      <div className={styles.board_list}>\n        <AddList />\n      </div>\n    </div>\n  );\n};\n","/Users/tksk/api-practice/api-practice/src/components/pages/modal/FormModal.tsx",["95"],"/Users/tksk/api-practice/api-practice/src/components/pages/modal/TaskBody.tsx",["96"],"/Users/tksk/api-practice/api-practice/src/index.tsx",[],"/Users/tksk/api-practice/api-practice/src/components/Home.tsx",["97","98","99"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Header } from \"./pages/header/Header\";\nimport { Main } from \"./pages/main/Main\";\nimport \"./Home.css\";\n\ninterface Props {\n  isLoggedIn: boolean;\n  handleOnLogout: () => void;\n}\n\nexport const Home: React.FC<Props> = (props) => {\n  return (\n    <div className=\"main\">\n      <Header\n        handleOnLogout={props.handleOnLogout}\n        isLoggedIn={props.isLoggedIn}\n      />\n      <Main />\n    </div>\n  );\n};\n",["100","101"],"/Users/tksk/api-practice/api-practice/src/components/pages/header/Header.tsx",[],["102","103"],"/Users/tksk/api-practice/api-practice/src/components/requests/BoardRequest.ts",[],"/Users/tksk/api-practice/api-practice/src/components/auth/AuthForm.tsx",[],"/Users/tksk/api-practice/api-practice/src/components/requests/TaskRequest.ts",[],"/Users/tksk/api-practice/api-practice/src/components/requests/authRequest.ts",[],"/Users/tksk/api-practice/api-practice/src/components/requests/AuthRequest.ts",[],["104","105"],"/Users/tksk/api-practice/api-practice/src/components/hooks/useDataReducer.ts",[],["106","107"],"/Users/tksk/api-practice/api-practice/src/components/pages/modal/BoardModal.tsx",["108"],"/Users/tksk/api-practice/api-practice/src/components/interfaces/interface.ts",[],"/Users/tksk/api-practice/api-practice/src/App.tsx",["109","110"],{"ruleId":"111","severity":1,"message":"112","line":10,"column":11,"nodeType":"113","messageId":"114","endLine":10,"endColumn":15},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":1,"column":47,"nodeType":"113","messageId":"114","endLine":1,"endColumn":56},{"ruleId":"111","severity":1,"message":"112","line":22,"column":11,"nodeType":"113","messageId":"114","endLine":22,"endColumn":15},{"ruleId":"111","severity":1,"message":"120","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"121","line":8,"column":11,"nodeType":"113","messageId":"114","endLine":8,"endColumn":21},{"ruleId":"111","severity":1,"message":"122","line":12,"column":11,"nodeType":"113","messageId":"114","endLine":12,"endColumn":20},{"ruleId":"111","severity":1,"message":"123","line":17,"column":17,"nodeType":"113","messageId":"114","endLine":17,"endColumn":25},{"ruleId":"111","severity":1,"message":"120","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":76,"column":7,"nodeType":"126","endLine":76,"endColumn":41},{"ruleId":"111","severity":1,"message":"120","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"127","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"128","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":13},{"ruleId":"115","replacedBy":"129"},{"ruleId":"117","replacedBy":"130"},{"ruleId":"115","replacedBy":"131"},{"ruleId":"117","replacedBy":"132"},{"ruleId":"115","replacedBy":"133"},{"ruleId":"117","replacedBy":"134"},{"ruleId":"115","replacedBy":"135"},{"ruleId":"117","replacedBy":"136"},{"ruleId":"111","severity":1,"message":"112","line":36,"column":11,"nodeType":"113","messageId":"114","endLine":36,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":75,"column":6,"nodeType":"139","endLine":75,"endColumn":8,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":80,"column":6,"nodeType":"139","endLine":80,"endColumn":12,"suggestions":"142"},"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'RefObject' is defined but never used.","'useState' is defined but never used.","'BoardsType' is defined but never used.","'TasksType' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useEffect' is defined but never used.","'axios' is defined but never used.",["143"],["144"],["143"],["144"],["143"],["144"],["143"],["144"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkLoginStatus'. Either include it or remove the dependency array.","ArrayExpression",["145"],"React Hook useEffect has missing dependencies: 'checkLoginStatus' and 'fetchData'. Either include them or remove the dependency array.",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [checkLoginStatus]",{"range":"151","text":"152"},"Update the dependencies array to be: [checkLoginStatus, fetchData, user]",{"range":"153","text":"154"},[2115,2117],"[checkLoginStatus]",[2187,2193],"[checkLoginStatus, fetchData, user]"]